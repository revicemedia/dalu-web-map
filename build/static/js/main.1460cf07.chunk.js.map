{"version":3,"sources":["svgs/restaurant_menu_black_24dp.svg","svgs/coffee_black_24dp.svg","svgs/local_bar_black_24dp.svg","components/Map.js","svgs/close_white_24dp.svg","components/LocationOverlay.js","Pages/DetailsPage.js","App.js","functions/getLocations.js","store/zoom.js","store/numbers.js","store/locations.js","store/exactlocation.js","store/ACTIVEROUTE.js","store/store.js","index.js"],"names":["Map","markers","loc","center","className","id","href","bootstrapURLKeys","key","zoom","gestureHandling","map","marker","index","lat","locationLat","lng","locationLng","text","locationName","locationStatus","src","locationType","RestaurantIcon","CafeIcon","BarIcon","alt","coords","latitude","longitude","LocationOverlayWrapper","styled","div","StatusWrapper","StatusTextOverlay","p","GreenDot","YellowDot","RedDot","LocationLayoutWrapper","LocationImage","img","ContentLocationWrapper","DetailsButton","CloseLocationOverlay","LocationOverlay","activeLocation","onCloseLocationOverlay","onDetailsButtonClick","activeRoute","useSelector","state","ACTIVEROUTE","dispatch","useDispatch","detailsButtonClick","name","type","payload","console","warn","locationId","onClick","CloseIcon","LoginWrapper","active","StyledDetailsMainWrapper","StyledDetailsImage","DetailsPage","locationCity","locationInfoText","locationPhone","Button","variant","MainWrapper","MapWrapper","App","useState","locationOverlayOpen","setLocationOverlayOpen","setActiveLocation","setMarkers","setCenter","log","nanoid","useEffect","fetch","then","response","json","data","onMarkerClick","Number","openLocationOverlay","initialState","centerStore","UserID","initialLocations","exactlocation","createStore","combineReducers","Locations","action","number","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.1460cf07.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/restaurant_menu_black_24dp.2bed2b9a.svg\";","export default __webpack_public_path__ + \"static/media/coffee_black_24dp.9aeb972b.svg\";","export default __webpack_public_path__ + \"static/media/local_bar_black_24dp.ef5c7910.svg\";","import \"../index.css\";\nimport React from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport RestaurantIcon from \"../svgs/restaurant_menu_black_24dp.svg\";\nimport CafeIcon from \"../svgs/coffee_black_24dp.svg\";\nimport BarIcon from \"../svgs/local_bar_black_24dp.svg\";\n\nfunction Map({ markers, loc, center }) {\n  const zoom = 12;\n\n  return (\n    <div className=\"MapWrapper\">\n      <div id=\"map\">\n        <div className=\"OverMap\">\n          <a className=\"DashboardButton\" href=\"https://dashboard.dalu-map.com\">\n            Zum Dashboard\n          </a>\n        </div>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: \"AIzaSyAoBsFNDDZL59ZGNy4UCPSjsbmEHNQhRHk\" }}\n          center={center}\n          zoom={zoom}\n          gestureHandling={\"greedy\"}\n        >\n          {markers.map((marker, index) => (\n            <div\n              className=\"MarkerIdee\"\n              lat={marker.locationLat}\n              lng={marker.locationLng}\n              text={marker.locationName}\n              key={index}\n            >\n              <div\n                className={\n                  marker.locationStatus === \"green\"\n                    ? \"StatusMarker BadgeGreen\"\n                    : marker.locationStatus === \"yellow\"\n                    ? \"StatusMarker BadgeYellow\"\n                    : marker.locationStatus === \"red\"\n                    ? \"StatusMarker BadgeRed\"\n                    : \"\"\n                }\n              ></div>\n              <img\n                src={\n                  marker.locationType === \"restaurant\"\n                    ? RestaurantIcon\n                    : marker.locationType === \"cafe\"\n                    ? CafeIcon\n                    : marker.locationType === \"bar\"\n                    ? BarIcon\n                    : \"\"\n                }\n                alt=\"Location type icon\"\n              />\n            </div>\n          ))}\n          {loc ? (\n            <div\n              className=\"GeoMarker\"\n              lat={loc.coords.latitude}\n              lng={loc.coords.longitude}\n            ></div>\n          ) : (\n            \"\"\n          )}\n        </GoogleMapReact>\n      </div>\n    </div>\n  );\n}\n\nexport default Map;\n","export default __webpack_public_path__ + \"static/media/close_white_24dp.244b6687.svg\";","import \"../index.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport CloseIcon from \"../svgs/close_white_24dp.svg\";\n\nfunction LocationOverlay({\n  activeLocation,\n  onCloseLocationOverlay,\n  onDetailsButtonClick,\n}) {\n  let activeRoute = useSelector((state) => state.ACTIVEROUTE.activeRoute);\n  const dispatch = useDispatch();\n\n  const changeNavigationLocation = (name) => {\n    if (name !== activeRoute && name !== activeRoute.activeRoute) {\n      dispatch({\n        type: \"changeActiveRoute\",\n        payload: { activeRoute: name },\n      });\n    } else {\n      console.warn(\"Dieser Tab ist bereits aktiv!\");\n    }\n  };\n\n  function closeLocationOverlay() {\n    onCloseLocationOverlay();\n  }\n\n  function detailsButtonClick() {\n    onDetailsButtonClick(activeLocation);\n    changeNavigationLocation(\"Details\");\n  }\n\n  return (\n    <LocationOverlayWrapper>\n      <LocationLayoutWrapper>\n        <LocationImage\n          src={\n            \"https://dalu-api-delivery-service.com/image-uploads/\" +\n            activeLocation.locationId +\n            \".jpg\"\n          }\n        />\n        <ContentLocationWrapper>\n          <h4>{activeLocation.locationName}</h4>\n          {activeLocation.locationStatus === \"green\" ? (\n            <StatusWrapper>\n              <GreenDot />\n              <StatusTextOverlay>Wenig ausgelastet</StatusTextOverlay>\n            </StatusWrapper>\n          ) : activeLocation.locationStatus === \"yellow\" ? (\n            <StatusWrapper>\n              <YellowDot />\n              <StatusTextOverlay>Stark ausgelastet</StatusTextOverlay>\n            </StatusWrapper>\n          ) : (\n            <StatusWrapper>\n              <RedDot />\n              <StatusTextOverlay>Keien freien Plätze</StatusTextOverlay>\n            </StatusWrapper>\n          )}\n          <DetailsButton onClick={() => detailsButtonClick(activeLocation)}>\n            Details\n          </DetailsButton>\n        </ContentLocationWrapper>\n      </LocationLayoutWrapper>\n      <CloseLocationOverlay onClick={() => closeLocationOverlay()}>\n        <img src={CloseIcon} alt=\"Close Location Overlay\" />\n      </CloseLocationOverlay>\n    </LocationOverlayWrapper>\n  );\n}\n\nconst LocationOverlayWrapper = styled.div`\n  width: 94vw;\n  height: auto;\n  z-index: 0;\n  background-color: #fff;\n  position: absolute;\n  bottom: 0;\n  padding: 10px 10px;\n  border-radius: 10px;\n  margin-right: 3vw;\n  margin-left: 3vw;\n  margin-bottom: 3vw;\n  align-self: center;\n  justify-self: center;\n`;\n\nconst StatusWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n`;\n\nconst StatusTextOverlay = styled.p`\n  font-size: 0.8rem;\n`;\n\nconst GreenDot = styled.div`\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  background-color: green;\n  margin-right: 10px;\n`;\n\nconst YellowDot = styled.div`\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  background-color: yellow;\n  margin-right: 10px;\n`;\n\nconst RedDot = styled.div`\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  background-color: red;\n  margin-right: 10px;\n`;\n\nconst LocationLayoutWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 4fr 6fr;\n  gap: 10px;\n  width: 100%;\n  height: auto;\n`;\n\nconst LocationImage = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: auto;\n  min-height: 100px;\n  max-height: 100px;\n  border-radius: 5px;\n  overflow: hidden;\n`;\n\nconst ContentLocationWrapper = styled.div`\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst DetailsButton = styled.div`\n  background-color: #3d3d3d;\n  color: #fff;\n  font-weight: 700;\n  padding: 10px 20px;\n  border-radius: 5px;\n  font-size: 0.8rem;\n  width: fit-content;\n`;\n\nconst CloseLocationOverlay = styled.div`\n  width: 30px;\n  height: 30px;\n  background-color: #fff;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: -35px;\n  right: 0px;\n`;\n\nexport default LocationOverlay;\n","import \"../index.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Button from \"@mui/material/Button\";\n\nfunction DetailsPage({ activeLocation }) {\n  let activeRoute = useSelector((state) => state.ACTIVEROUTE.activeRoute);\n  const dispatch = useDispatch();\n\n  const changeNavigationLocation = (name) => {\n    if (name !== activeRoute && name !== activeRoute.activeRoute) {\n      dispatch({\n        type: \"changeActiveRoute\",\n        payload: { activeRoute: name },\n      });\n    } else {\n      console.warn(\"Dieser Tab ist bereits aktiv!\");\n    }\n  };\n\n  return (\n    <LoginWrapper\n      active={\n        activeRoute === \"Details\" || activeRoute.activeRoute === \"Details\"\n      }\n    >\n      <StyledDetailsImage\n        src={\n          \"https://dalu-api-delivery-service.com/image-uploads/\" +\n          activeLocation.locationId\n        }\n        alt=\"Location\"\n      ></StyledDetailsImage>\n      <StyledDetailsMainWrapper>\n        <h3>{activeLocation.locationName}</h3>\n        <h5>{activeLocation.locationCity}</h5>\n        <br />\n        <p>{activeLocation.locationInfoText}</p>\n        <br />\n        <p>{activeLocation.locationStatus}</p>\n        <p>{activeLocation.locationPhone}</p>\n        <Button\n          variant=\"outlined\"\n          onClick={() => changeNavigationLocation(\"Map\")}\n        >\n          Zurück\n        </Button>\n      </StyledDetailsMainWrapper>\n    </LoginWrapper>\n  );\n}\n\nconst LoginWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  z-index: 0;\n  overflow: scroll;\n  ${({ active }) =>\n    !active &&\n    `\n    display: none;\n  `};\n`;\n\nconst StyledDetailsMainWrapper = styled.div`\n  padding: 10px 10px 10px 10px;\n`;\n\nconst StyledDetailsImage = styled.img`\n  width: 100%;\n  height: auto;\n`;\n\nexport default DetailsPage;\n","import \"./App.css\";\nimport \"./index.css\";\nimport styled from \"styled-components\";\nimport Map from \"./components/Map\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { getAllLocations } from \"./functions/getLocations.js\";\nimport { nanoid } from \"nanoid\";\nimport LocationOverlay from \"./components/LocationOverlay\";\nimport DetailsPage from \"./Pages/DetailsPage\";\n\nfunction App() {\n  const [locationOverlayOpen, setLocationOverlayOpen] = useState(false);\n  const [activeLocation, setActiveLocation] = useState([]);\n  const [markers, setMarkers] = useState([]);\n  const [center, setCenter] = useState({\n    lat: 50.3463816,\n    lng: 7.5185153,\n  });\n  let activeRoute = useSelector((state) => state.ACTIVEROUTE.activeRoute);\n\n  console.log(nanoid());\n\n  useEffect(() => {\n    getAllLocations().then((data) => {\n      setMarkers(data);\n    });\n  }, []);\n\n  // Called inside MapTest.js\n  function onMarkerClick(marker) {\n    setCenter({\n      lat: Number(marker.locationLat),\n      lng: Number(marker.locationLng),\n    });\n    openLocationOverlay(marker);\n  }\n\n  function openLocationOverlay(marker) {\n    setLocationOverlayOpen(true);\n    setActiveLocation(marker);\n  }\n\n  function onCloseLocationOverlay() {\n    setLocationOverlayOpen(false);\n    setActiveLocation([]);\n  }\n\n  function onDetailsButtonClick() {\n    console.log(activeLocation);\n  }\n\n  return (\n    <div className=\"root-wrapper\">\n      <MainWrapper>\n        <MapWrapper\n          active={activeRoute === \"Map\" || activeRoute.activeRoute === \"Map\"}\n        >\n          <Map\n            markers={markers}\n            center={center}\n            onMarkerClick={onMarkerClick}\n          ></Map>\n          {locationOverlayOpen && (\n            <LocationOverlay\n              activeLocation={activeLocation}\n              onCloseLocationOverlay={onCloseLocationOverlay}\n              onDetailsButtonClick={onDetailsButtonClick}\n            />\n          )}\n        </MapWrapper>\n        <DetailsPage activeLocation={activeLocation} />\n      </MainWrapper>\n    </div>\n  );\n}\n\nconst MainWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100vh;\n  background-color: #fff;\n`;\n\nconst MapWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nexport default App;\n","export const getAllLocations = () =>\n  fetch(\"https://dalu-api-delivery-service.com/getActiveRestaurants\").then(\n    (response) => response.json()\n  );\n","const initialState = {\n  centerStore: { lat: 50.362, lng: 7.603 },\n};\n\nexport function centerStore(state = initialState, action) {\n  if (action.type === \"changeCenter\") {\n    return { ...state, centerStore: action.payload };\n  }\n  return state;\n}\n","const initialState = {\n  UserID: 55,\n};\n\nexport function numberStore(state = initialState, action) {\n  return state;\n}\n","const initialState = {\n  initialLocations: \"\",\n};\n\nexport function locationStore(state = initialState, action) {\n  if (action.type === \"initialLocations\") {\n    return { ...state, initialLocations: action.payload };\n  } else if (action.type === \"updateState\") {\n    return { ...state, initialLocations: action.payload };\n  }\n  return state;\n}\n","const initialState = {\n  exactlocation: {},\n};\n\nexport function exactlocation(state = initialState, action) {\n  if (action.type === \"setCurrentPosition\") {\n    return { ...state, exactlocation: action.payload };\n  }\n  return state;\n}\n","const initialState = {\n  activeRoute: \"Home\",\n};\n\nexport function activeRoute(state = initialState, action) {\n  if (action.type === \"changeActiveRoute\") {\n    return { ...state, activeRoute: action.payload };\n  }\n  return state;\n}\n","import { createStore, combineReducers } from \"redux\";\nimport { centerStore } from \"./zoom\";\nimport { numberStore } from \"./numbers\";\nimport { locationStore } from \"./locations\";\nimport { exactlocation } from \"./exactlocation\";\nimport { activeRoute } from \"./ACTIVEROUTE\";\n\nexport default createStore(\n  combineReducers({\n    Locations: locationStore,\n    exactlocation: exactlocation,\n    center: centerStore,\n    number: numberStore,\n    ACTIVEROUTE: activeRoute,\n  })\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}